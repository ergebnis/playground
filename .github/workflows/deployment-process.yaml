# https://docs.github.com/en/actions

name: "Deployment"

on: # yamllint disable-line rule:truthy
  deployment: null

jobs:
  process:
    name: "Process"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.4"
        with:
          ref: "${{ github.event.deployment.sha }}"

      - name: "Mark deployment as in progress"
        uses: "actions/github-script@v3.0.0"
        with:
          github-token: "${{ secrets.ERGEBNIS_BOT_TOKEN }}"
          previews: "ant-man,flash"
          script: |
            const deployment = context.payload.deployment
            const repository = context.repo

            github.repos.createDeploymentStatus({
              deployment_id: deployment.id,
              log_url: `https://github.com/${repository.owner}/${repository.repo}/commit/${deployment.sha}/checks`,
              owner: repository.owner,
              repo: repository.repo,
              state: "in_progress",
            })

      - name: "Deploy"
        run: "sleep 5"

      - name: "Mark deployment as failure"
        if: "failure()"
        uses: "actions/github-script@v3.0.0"
        with:
          github-token: "${{ secrets.ERGEBNIS_BOT_TOKEN }}"
          previews: "ant-man"
          script: |
            const deployment = context.payload.deployment
            const repository = context.repo

            github.repos.createDeploymentStatus({
              deployment_id: deployment.id,
              log_url: `https://github.com/${repository.owner}/${repository.repo}/commit/${deployment.sha}/checks`,
              owner: repository.owner,
              repo: repository.repo,
              state: "failure",
            })

      - name: "Mark deployment as success"
        if: "success()"
        uses: "actions/github-script@v3.0.0"
        with:
          github-token: "${{ secrets.ERGEBNIS_BOT_TOKEN }}"
          previews: "ant-man"
          script: |
            const deployment = context.payload.deployment
            const repository = context.repo

            github.repos.createDeploymentStatus({
              auto_inactive: true,
              deployment_id: deployment.id,
              environment_url: deployment.payload.environmentUrl || "",
              log_url: `https://github.com/${repository.owner}/${repository.repo}/commit/${deployment.sha}/checks`,
              owner: repository.owner,
              repo: repository.repo,
              state: "success",
            })
