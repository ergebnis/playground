# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Deployment"

on: # yamllint disable-line rule:truthy
  pull_request:
    types:
      - "labeled"
      - "reopened"
      - "synchronize"

jobs:
  create:
    name: "Create"

    runs-on: "ubuntu-latest"

    if: "((github.event.action == 'reopened' || github.event.action == 'synchronize') && contains(github.event.pull_request.labels.*.name, 'environment')) || (github.event.action == 'labeled' &&  github.event.label.name == 'environment')"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          ref: "${{ github.head_ref }}"

      - name: "Determine deployment parameters"
        run: |
          echo ::set-env name=DEPLOYMENT_REFERENCE::$(echo ${{ github.head_ref }})
          echo ::set-env name=DEPLOYMENT_SHA::$(git rev-parse --short --verify HEAD)

      - name: "Create deployment for staging environment based on reference \"${{ env.DEPLOYMENT_REFERENCE }}\" and commit \"${{ env.DEPLOYMENT_SHA }}\""
        uses: "actions/github-script@0.8.0"
        with:
          github-token: "${{ secrets.ERGEBNIS_BOT_TOKEN }}"
          previews: "ant-man"
          script: |
            const repository = context.repo

            github.repos.createDeployment({
              auto_inactive: true,
              auto_merge: false,
              environment: "staging",
              owner: repository.owner,
              payload: {
                environmentUrl: "https://staging.localheinz.com",
              },
              production_environment: false,
              ref: "${{ env.DEPLOYMENT_REFERENCE }}",
              repo: repository.repo,
              required_contexts: [],
              task: "deploy",
              transient_environment: true,
            })
